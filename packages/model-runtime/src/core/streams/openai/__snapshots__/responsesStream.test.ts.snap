// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`OpenAIResponsesStream > Reasoning > summary 1`] = `
[
  "id: resp_684313b89200819087f27686e0c822260b502bf083132d0d
",
  "event: data
",
  "data: "in_progress"

",
  "id: resp_684313b89200819087f27686e0c822260b502bf083132d0d
",
  "event: data
",
  "data: {"type":"response.in_progress","response":{"id":"resp_684313b89200819087f27686e0c822260b502bf083132d0d","object":"response","created_at":1749226424,"status":"in_progress","error":null,"incomplete_details":null,"instructions":null,"max_output_tokens":null,"model":"o4-mini","output":[],"parallel_tool_calls":true,"previous_response_id":null,"reasoning":{"effort":"medium","summary":"detailed"},"service_tier":"auto","store":false,"temperature":1,"text":{"format":{"type":"text"}},"tool_choice":"auto","tools":[{"type":"function","description":"a search service. Useful for when you need to answer questions about current events. Input should be a search query. Output is a JSON array of the query results","name":"lobe-web-browsing____search____builtin","parameters":{"properties":{"query":{"description":"The search query","type":"string"},"searchCategories":{"description":"The search categories you can set:","items":{"enum":["general","images","news","science","videos"],"type":"string"},"type":"array"},"searchEngines":{"description":"The search engines you can use:","items":{"enum":["google","bilibili","bing","duckduckgo","npm","pypi","github","arxiv","google scholar","z-library","reddit","imdb","brave","wikipedia","pinterest","unsplash","vimeo","youtube"],"type":"string"},"type":"array"},"searchTimeRange":{"description":"The time range you can set:","enum":["anytime","day","week","month","year"],"type":"string"}},"required":["query"],"type":"object"},"strict":true},{"type":"function","description":"A crawler can visit page content. Output is a JSON object of title, content, url and website","name":"lobe-web-browsing____crawlSinglePage____builtin","parameters":{"properties":{"url":{"description":"The url need to be crawled","type":"string"}},"required":["url"],"type":"object"},"strict":true},{"type":"function","description":"A crawler can visit multi pages. If need to visit multi website, use this one. Output is an array of JSON object of title, content, url and website","name":"lobe-web-browsing____crawlMultiPages____builtin","parameters":{"properties":{"urls":{"items":{"description":"The urls need to be crawled","type":"string"},"type":"array"}},"required":["urls"],"type":"object"},"strict":true}],"top_p":1,"truncation":"disabled","usage":null,"user":null,"metadata":{}}}

",
  "id: resp_684313b89200819087f27686e0c822260b502bf083132d0d
",
  "event: data
",
  "data: {"id":"rs_684313b9774481908ee856625f82fb8c0b502bf083132d0d","type":"reasoning","summary":[]}

",
  "id: rs_684313b9774481908ee856625f82fb8c0b502bf083132d0d
",
  "event: reasoning
",
  "data: ""

",
  "id: rs_684313b9774481908ee856625f82fb8c0b502bf083132d0d
",
  "event: reasoning
",
  "data: "**Answering a"

",
  "id: rs_684313b9774481908ee856625f82fb8c0b502bf083132d0d
",
  "event: reasoning
",
  "data: " numeric or 9.92"

",
  "id: rs_684313b9774481908ee856625f82fb8c0b502bf083132d0d
",
  "event: reasoning
",
  "data: "."

",
  "id: resp_684313b89200819087f27686e0c822260b502bf083132d0d
",
  "event: data
",
  "data: {"type":"response.reasoning_summary_text.done","item_id":"rs_684313b9774481908ee856625f82fb8c0b502bf083132d0d","output_index":0,"summary_index":0,"text":"**Answering a numeric comparison**\\n\\nThe user is asking in Chinese which number is larger: 9.1 or 9.92. This is straightforward since 9.92 is clearly larger, as it's greater than 9.1. We can respond with \\"9.92大于9.1\\" without needing to search for more information. It's a simple comparison, but Iould also add a little explanation, noting that 9.92 is indeed 0.82 more than 9.1. However, keeping it simple with \\"9.92 > 9.1\\" is perfectly fine!"}

",
  "id: resp_684313b89200819087f27686e0c822260b502bf083132d0d
",
  "event: data
",
  "data: {"type":"response.reasoning_summary_part.done","item_id":"rs_684313b9774481908ee856625f82fb8c0b502bf083132d0d","output_index":0,"summary_index":0,"part":{"type":"summary_text","text":"**Answering a numeric comparison**\\n\\nThe user is asking in Chinese which number is larger: 9.1 or 9.92. This is straightforward since 9.92 is clearly larger, as it's greater than 9.1. We can respond with \\"9.92大于9.1\\" without needing to search for more information. Is a simple comparison, but I could also add a little explanation, noting that 9.92 is indeed 0.82 more than 9.1. However, keeping it simple with \\"9.92 > 9.1\\" is perfectly fine!"}}

",
  "id: rs_6843fe13e73c8190a49d9372ef8cd46f08c019075e7c8955
",
  "event: reasoning
",
  "data: "\\n"

",
  "id: rs_6843fe13e73c8190a49d9372ef8cd46f08c019075e7c8955
",
  "event: reasoning
",
  "data: "**Exploring a mathematical sequence**"

",
  "id: rs_6843fe13e73c8190a49d9372ef8cd46f08c019075e7c8955
",
  "event: reasoning
",
  "data: " analyzing"

",
  "id: rs_684313b9774481908ee856625f82fb8c0b502bf083132d0d
",
  "event: text
",
  "data: null

",
  "id: resp_684313b89200819087f27686e0c822260b502bf083132d0d
",
  "event: data
",
  "data: {"id":"msg_684313bee2c88190b0f4b09621ad7dc60b502bf083132d0d","type":"message","status":"in_progress","content":[],"role":"assistant"}

",
  "id: resp_684313b89200819087f27686e0c822260b502bf083132d0d
",
  "event: data
",
  "data: {"type":"response.content_part.added","item_id":"msg_684313bee2c88190b0f4b09621ad7dc60b502bf083132d0d","output_index":1,"content_index":0,"part":{"type":"output_text","annotations":[],"text":""}}

",
  "id: msg_684313bee2c88190b0f4b09621ad7dc60b502bf083132d0d
",
  "event: text
",
  "data: "9.92 比 9.1 大。"

",
  "id: resp_684313b89200819087f27686e0c822260b502bf083132d0d
",
  "event: data
",
  "data: {"type":"response.output_text.done","item_id":"msg_684313bee2c88190b0f4b09621ad7dc60b502bf083132d0d","output_index":1,"content_index":0,"text":"9.92 比 9.1 大。"}

",
  "id: resp_684313b89200819087f27686e0c822260b502bf083132d0d
",
  "event: data
",
  "data: {"type":"response.content_part.done","item_id":"msg_684313bee2c88190b0f4b09621ad7dc60b502bf083132d0d","output_index":1,"content_index":0,"part":{"type":"output_text","annotations":[],"text":"9.92 比 9.1 大。"}}

",
  "id: msg_684313bee2c88190b0f4b09621ad7dc60b502bf083132d0d
",
  "event: text
",
  "data: null

",
  "id: resp_684313b89200819087f27686e0c822260b502bf083132d0d
",
  "event: usage
",
  "data: {"inputCacheMissTokens":93,"inputCachedTokens":2298,"inputTextTokens":2391,"outputReasoningTokens":128,"outputTextTokens":16,"totalInputTokens":2391,"totalOutputTokens":144,"totalTokens":2535}

",
]
`;

exports[`OpenAIResponsesStream > should handle chunk errors in catch block 1`] = `
[
  "id: resp_error_catch
",
  "event: data
",
  "data: "in_progress"

",
  "id: undefined
",
  "event: reasoning
",
  "data: undefined

",
]
`;

exports[`OpenAIResponsesStream > should handle chunks with undefined values gracefully 1`] = `
[
  "id: resp_undefined_vals
",
  "event: data
",
  "data: "in_progress"

",
  "id: undefined
",
  "event: reasoning
",
  "data: undefined

",
]
`;

exports[`OpenAIResponsesStream > should handle first chunk error with FIRST_CHUNK_ERROR_KEY 1`] = `
[
  "id: first_chunk_error
",
  "event: error
",
  "data: {"body":{"message":"Invalid API key","errorType":"InvalidProviderAPIKey"},"message":"Invalid API key","type":"InvalidProviderAPIKey"}

",
]
`;

exports[`OpenAIResponsesStream > should handle first chunk error with message object 1`] = `
[
  "id: first_chunk_error
",
  "event: error
",
  "data: {"body":{"message":{"error":"API quota exceeded","code":429}},"message":"{\\"message\\":{\\"error\\":\\"API quota exceeded\\",\\"code\\":429}}","type":"ProviderBizError"}

",
]
`;

exports[`OpenAIResponsesStream > should handle first chunk error without message 1`] = `
[
  "id: first_chunk_error
",
  "event: error
",
  "data: {"body":{"code":"rate_limit_exceeded","status":429},"message":"{\\"code\\":\\"rate_limit_exceeded\\",\\"status\\":429}","type":"ProviderBizError"}

",
]
`;

exports[`OpenAIResponsesStream > should handle function_call in response.output_item.added 1`] = `
[
  "id: resp_test_456
",
  "event: data
",
  "data: "in_progress"

",
  "id: resp_test_456
",
  "event: tool_calls
",
  "data: [{"function":{"arguments":"{\\"location\\": \\"San Francisco\\"}","name":"get_weather"},"id":"call_abc123","index":0,"type":"function"}]

",
]
`;

exports[`OpenAIResponsesStream > should handle multiple annotations and accumulate citations 1`] = `
[
  "id: resp_multi_citation
",
  "event: data
",
  "data: "in_progress"

",
  "id: msg_cite
",
  "event: text
",
  "data: null

",
  "id: msg_cite
",
  "event: text
",
  "data: null

",
]
`;

exports[`OpenAIResponsesStream > should handle multiple function_calls with incrementing index 1`] = `
[
  "id: resp_multi_tool
",
  "event: data
",
  "data: "in_progress"

",
  "id: resp_multi_tool
",
  "event: tool_calls
",
  "data: [{"function":{"arguments":"{\\"param\\": \\"value1\\"}","name":"tool_one"},"id":"call_1","index":0,"type":"function"}]

",
  "id: resp_multi_tool
",
  "event: tool_calls
",
  "data: [{"function":{"arguments":"{\\"param\\": \\"value2\\"}","name":"tool_two"},"id":"call_2","index":1,"type":"function"}]

",
]
`;

exports[`OpenAIResponsesStream > should handle non-standard item types in output_item.added 1`] = `
[
  "id: resp_other_item
",
  "event: data
",
  "data: "in_progress"

",
  "id: resp_other_item
",
  "event: data
",
  "data: {"type":"message","id":"msg_test","status":"in_progress","content":[],"role":"assistant"}

",
]
`;

exports[`OpenAIResponsesStream > should handle response.completed with usage 1`] = `
[
  "id: resp_completed_usage
",
  "event: data
",
  "data: "in_progress"

",
  "id: resp_completed_usage
",
  "event: usage
",
  "data: {"inputCacheMissTokens":100,"inputTextTokens":100,"outputTextTokens":50,"totalInputTokens":100,"totalOutputTokens":50,"totalTokens":150}

",
]
`;

exports[`OpenAIResponsesStream > should handle response.completed without usage 1`] = `
[
  "id: resp_completed_no_usage
",
  "event: data
",
  "data: "in_progress"

",
  "id: resp_completed_no_usage
",
  "event: data
",
  "data: {"type":"response.completed","response":{"id":"resp_completed_no_usage","status":"completed"}}

",
]
`;

exports[`OpenAIResponsesStream > should handle response.created event 1`] = `
[
  "id: resp_test_123
",
  "event: data
",
  "data: "in_progress"

",
]
`;

exports[`OpenAIResponsesStream > should handle response.function_call_arguments.delta 1`] = `
[
  "id: resp_delta_test
",
  "event: data
",
  "data: "in_progress"

",
  "id: resp_delta_test
",
  "event: tool_calls
",
  "data: [{"function":{"arguments":"{\\"query\\":","name":"search_web"},"id":"call_delta","index":0,"type":"function"}]

",
  "id: resp_delta_test
",
  "event: tool_calls
",
  "data: [{"function":{"arguments":" \\"OpenAI\\"}","name":"search_web"},"id":"call_delta","index":0,"type":"function"}]

",
]
`;

exports[`OpenAIResponsesStream > should handle response.output_item.done with citations 1`] = `
[
  "id: resp_done_citation
",
  "event: data
",
  "data: "in_progress"

",
  "id: msg_final
",
  "event: text
",
  "data: null

",
  "id: msg_final
",
  "event: grounding
",
  "data: {"citations":[{"title":"Citation Title","url":"https://citation.com"}]}

",
]
`;

exports[`OpenAIResponsesStream > should handle response.output_item.done without citations 1`] = `
[
  "id: resp_done_no_citation
",
  "event: data
",
  "data: "in_progress"

",
  "id: msg_no_cite
",
  "event: text
",
  "data: null

",
]
`;

exports[`OpenAIResponsesStream > should handle response.output_text.annotation.added 1`] = `
[
  "id: resp_annotation
",
  "event: data
",
  "data: "in_progress"

",
  "id: msg_citation
",
  "event: text
",
  "data: null

",
]
`;

exports[`OpenAIResponsesStream > should handle response.output_text.delta 1`] = `
[
  "id: resp_text_delta
",
  "event: data
",
  "data: "in_progress"

",
  "id: msg_123
",
  "event: text
",
  "data: "Hello "

",
  "id: msg_123
",
  "event: text
",
  "data: "world!"

",
]
`;

exports[`OpenAIResponsesStream > should handle response.reasoning_summary_part.added for first part 1`] = `
[
  "id: resp_reasoning
",
  "event: data
",
  "data: "in_progress"

",
  "id: reasoning_1
",
  "event: reasoning
",
  "data: ""

",
]
`;

exports[`OpenAIResponsesStream > should handle response.reasoning_summary_part.added for subsequent parts 1`] = `
[
  "id: resp_reasoning_multi
",
  "event: data
",
  "data: "in_progress"

",
  "id: reasoning_1
",
  "event: reasoning
",
  "data: ""

",
  "id: reasoning_2
",
  "event: reasoning
",
  "data: "\\n"

",
]
`;

exports[`OpenAIResponsesStream > should handle response.reasoning_summary_text.delta 1`] = `
[
  "id: resp_reasoning_delta
",
  "event: data
",
  "data: "in_progress"

",
  "id: reasoning_123
",
  "event: reasoning
",
  "data: "Thinking about"

",
  "id: reasoning_123
",
  "event: reasoning
",
  "data: " the problem..."

",
]
`;

exports[`OpenAIResponsesStream > should handle stream chunk transformation error with null access 1`] = `
[
  "id: resp_error_test
",
  "event: data
",
  "data: "in_progress"

",
  "id: null
",
  "event: text
",
  "data: "test"

",
]
`;

exports[`OpenAIResponsesStream > should handle unknown chunk type as data 1`] = `
[
  "id: resp_unknown
",
  "event: data
",
  "data: "in_progress"

",
  "id: resp_unknown
",
  "event: data
",
  "data: {"type":"response.unknown_event","data":"some data"}

",
]
`;

exports[`OpenAIResponsesStream > should transform OpenAI stream to protocol stream 1`] = `
[
  "id: resp_683e7b8ca3308190b6837f20d2c015cd0cf93af363cdcf58
",
  "event: data
",
  "data: "in_progress"

",
  "id: resp_683e7b8ca3308190b6837f20d2c015cd0cf93af363cdcf58
",
  "event: data
",
  "data: {"type":"response.in_progress","response":{"id":"resp_683e7b8ca3308190b6837f20d2c015cd0cf93af363cdcf58","object":"response","created_at":1748925324,"status":"in_progress","error":null,"incomplete_details":null,"instructions":null,"max_output_tokens":null,"model":"o4-mini","output":[],"parallel_tool_calls":true,"previous_response_id":null,"reasoning":{"effort":"medium","summary":null},"service_tier":"auto","store":false,"temperature":1,"text":{"format":{"type":"text"}},"tool_choice":"auto","tools":[{"type":"function","description":"a search service. Useful for when you need to answer questions about current events. Input should be a search query. Output is a JSON array of the query results","name":"lobe-web-browsing____search____builtin","parameters":{"properties":{"query":{"description":"The search query","type":"string"},"searchCategories":{"description":"The search categories you can set:","items":{"enum":["general","images","news","science","videos"],"type":"string"},"type":"array"},"searchEngines":{"description":"The search engines you can use:","items":{"enum":["google","bilibili","bing","duckduckgo","npm","pypi","github","arxiv","google scholar","z-library","reddit","imdb","brave","wikipedia","pinterest","unsplash","vimeo","youtube"],"type":"string"},"type":"array"},"searchTimeRange":{"description":"The time range you can set:","enum":["anytime","day","week","month","year"],"type":"string"}},"required":["query"],"type":"object"},"strict":true},{"type":"function","description":"A crawler can visit page content. Output is a JSON object of title, content, url and website","name":"lobe-web-browsing____crawlSinglePage____builtin","parameters":{"properties":{"url":{"description":"The url need to be crawled","type":"string"}},"required":["url"],"type":"object"},"strict":true},{"type":"function","description":"A crawler can visit multi pages. If need to visit multi website, use this one. Output is an array of JSON object of title, content, url and website","name":"lobe-web-browsing____crawlMultiPages____builtin","parameters":{"properties":{"urls":{"items":{"description":"The urls need to be crawled","type":"string"},"type":"array"}},"required":["urls"],"type":"object"},"strict":true}],"top_p":1,"truncation":"disabled","usage":null,"user":null,"metadata":{}}}

",
  "id: resp_683e7b8ca3308190b6837f20d2c015cd0cf93af363cdcf58
",
  "event: data
",
  "data: {"id":"rs_683e7bc80a9c81908f6e3d61ad63cc1e0cf93af363cdcf58","type":"reasoning","summary":[]}

",
  "id: resp_683e7b8ca3308190b6837f20d2c015cd0cf93af363cdcf58
",
  "event: data
",
  "data: {"id":"msg_683e7bde8b0c8190970ab8c719c0fc1c0cf93af363cdcf58","type":"message","status":"in_progress","content":[],"role":"assistant"}

",
  "id: resp_683e7b8ca3308190b6837f20d2c015cd0cf93af363cdcf58
",
  "event: data
",
  "data: {"type":"response.content_part.added","item_id":"msg_683e7bde8b0c8190970ab8c719c0fc1c0cf93af363cdcf58","output_index":1,"content_index":0,"part":{"type":"output_text","annotations":[],"text":"Hello"}}

",
  "id: resp_683e7b8ca3308190b6837f20d2c015cd0cf93af363cdcf58
",
  "event: data
",
  "data: {"type":"response.content_part.added","item_id":"msg_683e7bde8b0c8190970ab8c719c0fc1c0cf93af363cdcf58","output_index":1,"content_index":0,"part":{"type":"output_text","annotations":[],"text":" world"}}

",
]
`;
